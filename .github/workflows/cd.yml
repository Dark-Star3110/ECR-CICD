name: CD

on:
  workflow_dispatch:
    inputs:
      Description:
        type: string
        required: false
  # pull_request:
  #   branches:
  #     - main
  #   types: [closed]

jobs:
  build:
    name: Build image ECR
    runs-on: ubuntu-latest
    steps:
      - name: Initiated Build
        run: echo "Start to build image..."

      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-northeast-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: "teramusubi-staging-ecr"
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:latest .
          docker tag $REGISTRY/$REPOSITORY:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    steps:
      - name: Initiated Deploy
        run: echo "Start to deploy image $REPOSITORY_URL:$IMAGE_TAG"
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: "teramusubi-staging-service"
          cluster: "teramusubi-staging-cluter"
          wait-for-service-stability: true
